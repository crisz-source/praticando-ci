# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Integração Contínua

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
   
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Inicia o banco de dados
      run: docker-compose up -d postgres

    # - name: Lint
    #   run: docker run --rm -itv $(pwd):/app -w /app golangci/golangci-lint golangci-lint run controllers/ database/ models/ routes/
    
    - name: Lint
      uses: golangci/golangci-lint-action@v6
      with:
          version: v1.60
          args: controllers/ database/ models/ routes/

    - name: Test
      run: DB_HOST=${{ secrets.DB_HOST }} DB_PASSWORD=${{ secrets.DB_PASSWORD }} DB_USER=${{ secrets.DB_USER }} DB_NAME=${{ secrets.DB_NAME }} DB_PORT=${{ secrets.DB_PORT }} go test main_test.go

    - name: Build
      run: go build main.go
    
  # cd: # cd para kubernetes
  #   needs: ci
 
       
  #     # iniciando a conexão ao cluster kubernetes
  #   - name: Setup Kubectl
  #     uses: azure/setup-kubectl@v3
  #     with:
  #       version: 'v1.28.0'

  #   - name: Conectando o cluster kubernetes # transforme em base64 o conteudo do arquivo config e adicione em secrets do github: cat ~/.kube/config | base64
  #     run: |
  #       echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config 

  #   - name: Deploy to Kubernetes
  #     run: |
  #       kubectl set image deployment/php-prod *=$DOCKER_HUB_USERNAME/images:php-prod${{ steps.bump_version.outputs.new_version }} --namespace=php-nginx
  #       kubectl rollout status deployment/php-prod